CREATE TABLE IF NOT EXISTS users (
	USER_ID BIGINT NOT NULL AUTO_INCREMENT,
	EMAIL VARCHAR(255) NOT NULL,
	LOGIN VARCHAR(255) NOT NULL,
	NAME VARCHAR(255),
	BIRTH_DATE DATE,
	CONSTRAINT USER_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS genre (
	genre_id INTEGER NOT NULL AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL,
	CONSTRAINT genre_pk PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS rating (
	rating_id INTEGER NOT NULL AUTO_INCREMENT,
	name VARCHAR(255) NOT NULL,
	CONSTRAINT rating_pk PRIMARY KEY (rating_id)
);

CREATE TABLE IF NOT EXISTS FILM (
	FILM_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(200) NOT NULL,
	DESCRIPTION VARCHAR(200),
	RELEASE_DATE DATE,
	DURATION INTEGER,
	RATING_ID INTEGER,
	CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID),
	CONSTRAINT FILM_RATING_FK FOREIGN KEY (RATING_ID) REFERENCES RATING(RATING_ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRE (
	FILM_ID BIGINT NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILM_GENRE_PK PRIMARY KEY (FILM_ID,GENRE_ID),
	CONSTRAINT FILM_GENRE_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID) ON DELETE CASCADE,
	CONSTRAINT FILM_GENRE_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRE(GENRE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FILM_LIKE (
	FILM_ID BIGINT NOT NULL,
	USER_ID BIGINT NOT NULL,
	CONSTRAINT FIRM_LIKE_PK PRIMARY KEY (FILM_ID,USER_ID),
	CONSTRAINT FIRM_LIKE_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID) ON DELETE CASCADE,
	CONSTRAINT FIRM_LIKE_USER_FK FOREIGN KEY (USER_ID) REFERENCES users(USER_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS USER_FRIEND (
	USER_ID BIGINT NOT NULL,
	FRIEND_ID BIGINT NOT NULL,
	CONSTRAINT USER_FRIEND_PK PRIMARY KEY (USER_ID, FRIEND_ID),
	CONSTRAINT USER_FRIEND_USER_FK FOREIGN KEY (USER_ID) REFERENCES users(USER_ID) ON DELETE CASCADE,
	CONSTRAINT USER_FRIEND_FRIEND_FK FOREIGN KEY (FRIEND_ID) REFERENCES users(USER_ID) ON DELETE CASCADE
);